<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>面向对象游戏贪吃蛇</title>
    <url>/2021/09/10/js%E8%B4%AA%E5%90%83%E8%9B%87/</url>
    <content><![CDATA[<p>在学习的过程中了解到如何用构造函数创建对象和用原型方法来做小游戏，总共构造了三个对象。先上图：</p>
<img src="/2021/09/10/js%E8%B4%AA%E5%90%83%E8%9B%87/tc.png" style="zoom:75%; float:left;">

<span id="more"></span>

<h1 id="页面制作"><a href="#页面制作" class="headerlink" title="页面制作"></a>页面制作</h1><p>先弄一个大边框和左边的游戏地图部分。部分样式如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#q</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">margin</span>: auto;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">1050px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">680px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-id">#map</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">      <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">images/ba.jpg</span>);</span><br><span class="line">      <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">120%</span>;</span><br><span class="line">      <span class="attribute">border</span>: cadetblue <span class="number">40px</span> solid;</span><br><span class="line">      <span class="attribute">float</span>: left;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-id">#right</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">130px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">640px</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: burlywood;</span><br><span class="line">      <span class="attribute">right</span>: <span class="number">350px</span>;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">      <span class="attribute">float</span>: left;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h1 id="Food对象"><a href="#Food对象" class="headerlink" title="Food对象"></a>Food对象</h1><p>我们先构造食物对象，让它能在我们的地图中出现。</p>
<ul>
<li>构造函数属性：    坐标x,y  大小width,heigh</li>
<li>init：      初始化食物</li>
<li>remove：      移除食物      </li>
</ul>
<h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="comment">//食物的构造函数</span></span><br><span class="line">    <span class="function">function <span class="title">Food</span><span class="params">(x, y, width, height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x || <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>.y = y || <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>.width = width || <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">this</span>.height = height || <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">this</span>.color = <span class="string">&quot;url(images/bianbian.png)&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="init"><a href="#init" class="headerlink" title="init()"></a>init()</h2><p>我们需要将食物生成页面元素显示在map上。将map划分成20x15的格子，让食物出现在这些格子里。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//存放食物的数组</span></span><br><span class="line"><span class="keyword">var</span> elements = [];</span><br><span class="line"><span class="comment">//食物的初始化方法</span></span><br><span class="line">Food.prototype.<span class="keyword">init</span> = function (map) &#123;</span><br><span class="line">    <span class="comment">//移除之前的食物</span></span><br><span class="line">    <span class="keyword">this</span>.remove();</span><br><span class="line">    <span class="comment">//指定食物的坐标</span></span><br><span class="line">    <span class="keyword">var</span> maxX = Math.floor(map.clientWidth / <span class="keyword">this</span>.width);</span><br><span class="line">    <span class="keyword">var</span> maxY = Math.floor(map.clientHeight / <span class="keyword">this</span>.height);</span><br><span class="line">    <span class="keyword">var</span> x = Random.getRandom(<span class="number">0</span>, maxX);</span><br><span class="line">    <span class="keyword">var</span> y = Random.getRandom(<span class="number">0</span>, maxY);</span><br><span class="line">    <span class="keyword">this</span>.x = x;</span><br><span class="line">    <span class="keyword">this</span>.y = y;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建页面元素</span></span><br><span class="line">    <span class="keyword">var</span> foodEle = document.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    foodEle.style.position = <span class="string">&quot;absolute&quot;</span>;</span><br><span class="line">    foodEle.style.width = <span class="keyword">this</span>.width + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    foodEle.style.height = <span class="keyword">this</span>.height + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    foodEle.style.backgroundImage = <span class="keyword">this</span>.color;</span><br><span class="line">    foodEle.style.backgroundSize = <span class="string">&quot;100% 100%&quot;</span>;</span><br><span class="line">    foodEle.style.zIndex = <span class="number">1</span>;</span><br><span class="line">    foodEle.style.left = <span class="keyword">this</span>.x * <span class="keyword">this</span>.width + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    foodEle.style.top = <span class="keyword">this</span>.y * <span class="keyword">this</span>.height + <span class="string">&quot;px&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把食物添加到页面</span></span><br><span class="line">    map.appendChild(foodEle);</span><br><span class="line">    <span class="comment">//把食物添加到数组里面</span></span><br><span class="line">    elements.push(foodEle);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="remove"><a href="#remove" class="headerlink" title="remove()"></a>remove()</h2><p>通过数组找到之前在地图上创建的食物，删除页面元素后再从数组中删除。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//移除食物的方法 （私有方法）</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">Food</span>.</span></span>prototype.remove = <span class="keyword">function</span> <span class="literal">()</span> &#123;</span><br><span class="line">        <span class="comment">//要分别从页面和数组中移除</span></span><br><span class="line">        <span class="keyword">for</span> (var i = elements.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            var ele = elements<span class="literal">[<span class="identifier">i</span>]</span>;</span><br><span class="line">            ele.parentNode.remove<span class="constructor">Child(<span class="params">ele</span>)</span>;</span><br><span class="line">            elements.splice(i, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<h1 id="Snake对象"><a href="#Snake对象" class="headerlink" title="Snake对象"></a>Snake对象</h1><ul>
<li>构造函数属性：      蛇关节大小width,higth  方向direction  身躯body</li>
<li>init：           在地图上生成蛇，并确定初始方向</li>
<li>move：            让小蛇动起来</li>
<li>remove：         移除小蛇</li>
</ul>
<h2 id="构造函数-1"><a href="#构造函数-1" class="headerlink" title="构造函数"></a>构造函数</h2><p>body中放了小蛇头和身体的坐标和背景图以及背景图的朝向。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> sco=document.querySelectorAll(<span class="string">&quot;.sco&quot;</span>);</span><br><span class="line">    <span class="comment">//存放小蛇身躯的数组</span></span><br><span class="line">    <span class="keyword">var</span> elements = [];</span><br><span class="line">    <span class="comment">//小蛇的构造函数</span></span><br><span class="line">    function Snake(width, height, direction) &#123;</span><br><span class="line">        <span class="keyword">this</span>.width = width || <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">this</span>.height = height || <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">this</span>.direction = direction || <span class="string">&quot;right&quot;</span>;</span><br><span class="line">        <span class="comment">//游戏分数统计</span></span><br><span class="line">        <span class="keyword">this</span>.score=<span class="number">0</span>;</span><br><span class="line">        sco[<span class="number">0</span>].innerText=<span class="keyword">this</span>.score;</span><br><span class="line">        sco[<span class="number">1</span>].innerText=<span class="keyword">this</span>.score;</span><br><span class="line">        <span class="comment">//小蛇身躯</span></span><br><span class="line">        <span class="keyword">this</span>.body = [</span><br><span class="line">            &#123; x: <span class="number">3</span>, y: <span class="number">2</span>, color: <span class="string">&quot;url(images/header.png)&quot;</span>, tra: <span class="string">&quot;rotate(270deg)&quot;</span> &#125;,</span><br><span class="line">            &#123; x: <span class="number">2</span>, y: <span class="number">2</span>, color: <span class="string">&quot;url(images/body.png)&quot;</span>, tra: <span class="string">&quot;rotate(90deg)&quot;</span> &#125;,</span><br><span class="line">            &#123; x: <span class="number">1</span>, y: <span class="number">2</span>, color: <span class="string">&quot;url(images/body.png)&quot;</span>, tra: <span class="string">&quot;rotate(90deg)&quot;</span> &#125;,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="init-1"><a href="#init-1" class="headerlink" title="init()"></a>init()</h2><p>创建小蛇的身躯，设置小蛇的大小、初始位置以及背景图。</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">//小蛇的初始化方法</span><br><span class="line">    Snake.prototype.init = function (<span class="built_in">map</span>) &#123;</span><br><span class="line">        //移除之前的小蛇</span><br><span class="line">        this.<span class="built_in">remove</span>();</span><br><span class="line">        //创建小蛇的每一个身躯</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">var</span> i = <span class="number">0</span>; i &lt; this.body.<span class="built_in">length</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">var</span> item = this.body[i];</span><br><span class="line">            <span class="built_in">var</span> bodyEle = document.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.<span class="built_in">position</span> = <span class="string">&quot;absolute&quot;</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.<span class="built_in">width</span> = this.<span class="built_in">width</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.<span class="built_in">height</span> = this.<span class="built_in">height</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.backgroundImage = item.<span class="built_in">color</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.left = item.x * this.<span class="built_in">width</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.top = item.y * this.<span class="built_in">height</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.backgroundSize = <span class="string">&quot;100% 100%&quot;</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.zIndex=<span class="number">1</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.<span class="built_in">transform</span> = item.tra;</span><br><span class="line">            <span class="built_in">map</span>.appendChild(bodyEle);</span><br><span class="line">            elements.<span class="built_in">push</span>(bodyEle);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<h2 id="move"><a href="#move" class="headerlink" title="move()"></a>move()</h2><p>将小蛇身体往前进一格，判断小蛇前进的方向后让头部位置改变同时也要改变背景图蛇头的朝向。</p>
<p>当蛇头和食物重叠时在数组最后再创建和最后一个数据相同的身体，然后移除食物重新生成。</p>
<p>当小蛇身体和食物重叠时会出现问题，我们遍历数组进行判断，如果重叠就重新生成食物。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//小蛇移动的方法</span></span><br><span class="line">Snake.prototype.move = function (map, food) &#123;</span><br><span class="line">    <span class="comment">//改变非蛇头部分坐标</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">this</span>.body.length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">this</span>.body[i].x = <span class="keyword">this</span>.body[i - <span class="number">1</span>].x;</span><br><span class="line">        <span class="keyword">this</span>.body[i].y = <span class="keyword">this</span>.body[i - <span class="number">1</span>].y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//改变蛇头部分坐标</span></span><br><span class="line">    switch (<span class="keyword">this</span>.direction) &#123;</span><br><span class="line">        case <span class="string">&quot;right&quot;</span>:</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].x += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].tra = <span class="string">&quot;rotate(270deg)&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        case <span class="string">&quot;left&quot;</span>:</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].x -= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].tra = <span class="string">&quot;rotate(90deg)&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        case <span class="string">&quot;up&quot;</span>:</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].y -= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].tra = <span class="string">&quot;rotate(180deg)&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        case <span class="string">&quot;down&quot;</span>:</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].y += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].tra = <span class="string">&quot;rotate(0deg)&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        default:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当蛇头坐标和食物坐标重叠的时候，就可以吃食物了</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.body[<span class="number">0</span>].x === food.x &amp;&amp; <span class="keyword">this</span>.body[<span class="number">0</span>].y === food.y) &#123;</span><br><span class="line">        <span class="comment">//让小蛇的身躯+1</span></span><br><span class="line">        <span class="keyword">this</span>.score+=<span class="number">500</span>;</span><br><span class="line">        sco[<span class="number">0</span>].innerText=<span class="keyword">this</span>.score;</span><br><span class="line">        sco[<span class="number">1</span>].innerText=<span class="keyword">this</span>.score;</span><br><span class="line">        <span class="keyword">var</span> last = <span class="keyword">this</span>.body[<span class="keyword">this</span>.body.length - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">var</span> item = &#123;</span><br><span class="line">            x: last.x,</span><br><span class="line">            y: last.y,</span><br><span class="line">            color: last.color,</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">this</span>.body.push(item);</span><br><span class="line">        <span class="comment">//在页面移除食物 新增一个新的食物</span></span><br><span class="line">        food.<span class="keyword">init</span>(map);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="keyword">this</span>.body.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.body[i].x === food.x &amp;&amp; <span class="keyword">this</span>.body[i].y === food.y) &#123;</span><br><span class="line">            food.<span class="keyword">init</span>(map);</span><br><span class="line">            <span class="comment">// console.log(&#x27;gg&#x27;);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//每次移动就会删除之前的，重新生成</span></span><br><span class="line">    <span class="keyword">this</span>.<span class="keyword">init</span>(map);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>js小游戏</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>css</tag>
        <tag>JavaScrip</tag>
      </tags>
  </entry>
</search>
