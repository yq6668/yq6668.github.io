<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>js小游戏贪吃蛇</title>
    <url>/2021/09/10/js%E8%B4%AA%E5%90%83%E8%9B%87/</url>
    <content><![CDATA[<p>在学习的过程中了解到如何用构造函数创建对象和用原型方法来做小游戏，总共构造了三个对象。先上图：</p>
<img src="/2021/09/10/js%E8%B4%AA%E5%90%83%E8%9B%87/tc.png" style="zoom:80%;">

<div style="clear:both;"></div>

<span id="more"></span>

<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><p>先弄一个边框和左边的游戏地图部分。部分样式如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#q</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">margin</span>: auto;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">1050px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">680px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-id">#map</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">      <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">images/ba.jpg</span>);</span><br><span class="line">      <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">120%</span>;</span><br><span class="line">      <span class="attribute">border</span>: cadetblue <span class="number">40px</span> solid;</span><br><span class="line">      <span class="attribute">float</span>: left;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-id">#right</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">130px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">640px</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: burlywood;</span><br><span class="line">      <span class="attribute">right</span>: <span class="number">350px</span>;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">      <span class="attribute">float</span>: left;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h1 id="Food"><a href="#Food" class="headerlink" title="Food"></a>Food</h1><p>我们先构造食物对象，让它能在我们的地图中出现。</p>
<ul>
<li>构造函数属性：    坐标x,y  大小width,heigh</li>
<li>init：      初始化食物</li>
<li>remove：      移除食物      </li>
</ul>
<h2 id="constructor-NaN"><a href="#constructor-NaN" class="headerlink" title="constructor"></a>constructor</h2><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="comment">//食物的构造函数</span></span><br><span class="line">    <span class="function">function <span class="title">Food</span><span class="params">(x, y, width, height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x || <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>.y = y || <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>.width = width || <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">this</span>.height = height || <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">this</span>.color = <span class="string">&quot;url(images/bianbian.png)&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="init"><a href="#init" class="headerlink" title="init()"></a>init()</h2><p>我们需要将食物生成页面元素显示在map上。将map划分成20x15的格子，让食物出现在这些格子里。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//存放食物的数组</span></span><br><span class="line"><span class="keyword">var</span> elements = [];</span><br><span class="line"><span class="comment">//食物的初始化方法</span></span><br><span class="line">Food.prototype.<span class="keyword">init</span> = function (map) &#123;</span><br><span class="line">    <span class="comment">//移除之前的食物</span></span><br><span class="line">    <span class="keyword">this</span>.remove();</span><br><span class="line">    <span class="comment">//指定食物的坐标</span></span><br><span class="line">    <span class="keyword">var</span> maxX = Math.floor(map.clientWidth / <span class="keyword">this</span>.width);</span><br><span class="line">    <span class="keyword">var</span> maxY = Math.floor(map.clientHeight / <span class="keyword">this</span>.height);</span><br><span class="line">    <span class="keyword">var</span> x = Random.getRandom(<span class="number">0</span>, maxX);</span><br><span class="line">    <span class="keyword">var</span> y = Random.getRandom(<span class="number">0</span>, maxY);</span><br><span class="line">    <span class="keyword">this</span>.x = x;</span><br><span class="line">    <span class="keyword">this</span>.y = y;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建页面元素</span></span><br><span class="line">    <span class="keyword">var</span> foodEle = document.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    foodEle.style.position = <span class="string">&quot;absolute&quot;</span>;</span><br><span class="line">    foodEle.style.width = <span class="keyword">this</span>.width + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    foodEle.style.height = <span class="keyword">this</span>.height + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    foodEle.style.backgroundImage = <span class="keyword">this</span>.color;</span><br><span class="line">    foodEle.style.backgroundSize = <span class="string">&quot;100% 100%&quot;</span>;</span><br><span class="line">    foodEle.style.zIndex = <span class="number">1</span>;</span><br><span class="line">    foodEle.style.left = <span class="keyword">this</span>.x * <span class="keyword">this</span>.width + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    foodEle.style.top = <span class="keyword">this</span>.y * <span class="keyword">this</span>.height + <span class="string">&quot;px&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把食物添加到页面</span></span><br><span class="line">    map.appendChild(foodEle);</span><br><span class="line">    <span class="comment">//把食物添加到数组里面</span></span><br><span class="line">    elements.push(foodEle);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="remove"><a href="#remove" class="headerlink" title="remove()"></a>remove()</h2><p>通过数组找到之前在地图上创建的食物，删除页面元素后再从数组中删除。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//移除食物的方法 （私有方法）</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">Food</span>.</span></span>prototype.remove = <span class="keyword">function</span> <span class="literal">()</span> &#123;</span><br><span class="line">        <span class="comment">//要分别从页面和数组中移除</span></span><br><span class="line">        <span class="keyword">for</span> (var i = elements.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            var ele = elements<span class="literal">[<span class="identifier">i</span>]</span>;</span><br><span class="line">            ele.parentNode.remove<span class="constructor">Child(<span class="params">ele</span>)</span>;</span><br><span class="line">            elements.splice(i, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<h1 id="Snake"><a href="#Snake" class="headerlink" title="Snake"></a>Snake</h1><ul>
<li>构造函数属性：      蛇关节大小width,higth  方向direction  身躯body</li>
<li>init：           在地图上生成蛇，并确定初始方向</li>
<li>move：            让小蛇动起来</li>
<li>remove：         移除小蛇</li>
</ul>
<h2 id="constructor"><a href="#constructor" class="headerlink" title="constructor"></a>constructor</h2><p>body中放了小蛇头和身体的坐标和背景图以及背景图的朝向。</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> sco=document.querySelectorAll(<span class="string">&quot;.sco&quot;</span>);</span><br><span class="line">    <span class="comment">//存放小蛇身躯的数组</span></span><br><span class="line">    <span class="keyword">var</span> elements = [];</span><br><span class="line">    <span class="comment">//小蛇的构造函数</span></span><br><span class="line">    function Snake(width, height, direction) &#123;</span><br><span class="line">        <span class="keyword">this</span>.width = width || <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">this</span>.height = height || <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">this</span>.direction = direction || <span class="string">&quot;right&quot;</span>;</span><br><span class="line">        <span class="comment">//游戏分数统计</span></span><br><span class="line">        <span class="keyword">this</span>.score=<span class="number">0</span>;</span><br><span class="line">        sco[<span class="number">0</span>].innerText=<span class="keyword">this</span>.score;</span><br><span class="line">        sco[<span class="number">1</span>].innerText=<span class="keyword">this</span>.score;</span><br><span class="line">        <span class="comment">//小蛇身躯</span></span><br><span class="line">        <span class="keyword">this</span>.body = [</span><br><span class="line">            &#123; x: <span class="number">3</span>, y: <span class="number">2</span>, color: <span class="string">&quot;url(images/header.png)&quot;</span>, tra: <span class="string">&quot;rotate(270deg)&quot;</span> &#125;,</span><br><span class="line">            &#123; x: <span class="number">2</span>, y: <span class="number">2</span>, color: <span class="string">&quot;url(images/body.png)&quot;</span>, tra: <span class="string">&quot;rotate(90deg)&quot;</span> &#125;,</span><br><span class="line">            &#123; x: <span class="number">1</span>, y: <span class="number">2</span>, color: <span class="string">&quot;url(images/body.png)&quot;</span>, tra: <span class="string">&quot;rotate(90deg)&quot;</span> &#125;,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="init-1"><a href="#init-1" class="headerlink" title="init()"></a>init()</h2><p>创建小蛇的身躯，设置小蛇的大小、初始位置以及背景图。</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">//小蛇的初始化方法</span><br><span class="line">    Snake.prototype.init = function (<span class="built_in">map</span>) &#123;</span><br><span class="line">        //移除之前的小蛇</span><br><span class="line">        this.<span class="built_in">remove</span>();</span><br><span class="line">        //创建小蛇的每一个身躯</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">var</span> i = <span class="number">0</span>; i &lt; this.body.<span class="built_in">length</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">var</span> item = this.body[i];</span><br><span class="line">            <span class="built_in">var</span> bodyEle = document.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.<span class="built_in">position</span> = <span class="string">&quot;absolute&quot;</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.<span class="built_in">width</span> = this.<span class="built_in">width</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.<span class="built_in">height</span> = this.<span class="built_in">height</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.backgroundImage = item.<span class="built_in">color</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.left = item.x * this.<span class="built_in">width</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.top = item.y * this.<span class="built_in">height</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.backgroundSize = <span class="string">&quot;100% 100%&quot;</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.zIndex=<span class="number">1</span>;</span><br><span class="line">            bodyEle.<span class="built_in">style</span>.<span class="built_in">transform</span> = item.tra;</span><br><span class="line">            <span class="built_in">map</span>.appendChild(bodyEle);</span><br><span class="line">            elements.<span class="built_in">push</span>(bodyEle);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<h2 id="move"><a href="#move" class="headerlink" title="move()"></a>move()</h2><ul>
<li><p>将小蛇身体往前进一格，判断小蛇前进的方向后让头部位置改变同时也要改变背景图蛇头的朝向。</p>
</li>
<li><p>当蛇头和食物重叠时在数组最后再创建和最后一个数据相同的身体，然后移除食物重新生成。</p>
</li>
<li><p>当小蛇身体和食物重叠时会出现问题，我们遍历数组进行判断，如果重叠就重新生成食物。</p>
</li>
</ul>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//小蛇移动的方法</span></span><br><span class="line">Snake.prototype.move = function (map, food) &#123;</span><br><span class="line">    <span class="comment">//改变非蛇头部分坐标</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">this</span>.body.length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">this</span>.body[i].x = <span class="keyword">this</span>.body[i - <span class="number">1</span>].x;</span><br><span class="line">        <span class="keyword">this</span>.body[i].y = <span class="keyword">this</span>.body[i - <span class="number">1</span>].y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//改变蛇头部分坐标</span></span><br><span class="line">    switch (<span class="keyword">this</span>.direction) &#123;</span><br><span class="line">        case <span class="string">&quot;right&quot;</span>:</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].x += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].tra = <span class="string">&quot;rotate(270deg)&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        case <span class="string">&quot;left&quot;</span>:</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].x -= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].tra = <span class="string">&quot;rotate(90deg)&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        case <span class="string">&quot;up&quot;</span>:</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].y -= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].tra = <span class="string">&quot;rotate(180deg)&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        case <span class="string">&quot;down&quot;</span>:</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].y += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.body[<span class="number">0</span>].tra = <span class="string">&quot;rotate(0deg)&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        default:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当蛇头坐标和食物坐标重叠的时候，就可以吃食物了</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.body[<span class="number">0</span>].x === food.x &amp;&amp; <span class="keyword">this</span>.body[<span class="number">0</span>].y === food.y) &#123;</span><br><span class="line">        <span class="comment">//让小蛇的身躯+1</span></span><br><span class="line">        <span class="keyword">this</span>.score+=<span class="number">500</span>;</span><br><span class="line">        sco[<span class="number">0</span>].innerText=<span class="keyword">this</span>.score;</span><br><span class="line">        sco[<span class="number">1</span>].innerText=<span class="keyword">this</span>.score;</span><br><span class="line">        <span class="keyword">var</span> last = <span class="keyword">this</span>.body[<span class="keyword">this</span>.body.length - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">var</span> item = &#123;</span><br><span class="line">            x: last.x,</span><br><span class="line">            y: last.y,</span><br><span class="line">            color: last.color,</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">this</span>.body.push(item);</span><br><span class="line">        <span class="comment">//在页面移除食物 新增一个新的食物</span></span><br><span class="line">        food.<span class="keyword">init</span>(map);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="keyword">this</span>.body.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.body[i].x === food.x &amp;&amp; <span class="keyword">this</span>.body[i].y === food.y) &#123;</span><br><span class="line">            food.<span class="keyword">init</span>(map);</span><br><span class="line">            <span class="comment">// console.log(&#x27;gg&#x27;);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//每次移动就会删除之前的，重新生成</span></span><br><span class="line">    <span class="keyword">this</span>.<span class="keyword">init</span>(map);</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<h2 id="remove-1"><a href="#remove-1" class="headerlink" title="remove()"></a>remove()</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//移除小蛇的方法</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">Snake</span>.</span></span>prototype.remove = <span class="keyword">function</span> <span class="literal">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (var i = elements.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            console.log(elements<span class="literal">[<span class="identifier">i</span>]</span>);</span><br><span class="line">            elements<span class="literal">[<span class="identifier">i</span>]</span>.parentNode.remove<span class="constructor">Child(<span class="params">elements</span>[<span class="params">i</span>])</span>;</span><br><span class="line">            elements.splice(i, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<h1 id="Game"><a href="#Game" class="headerlink" title="Game"></a>Game</h1><ul>
<li>构造函数属性：     food   snake   map   timer</li>
<li>startGame:          初始化游戏</li>
<li>time：                  开启定时器，让小蛇移动和判断游戏是否结束</li>
<li>pausee：             清除定时器，让小蛇暂停</li>
<li>bindKey：           绑定键盘的按键，控制小蛇的移动方向</li>
<li>list:                        排行榜</li>
<li>gameOver：        判断游戏结束</li>
<li>resetGame：       重置游戏</li>
</ul>
<h2 id="constructor-1"><a href="#constructor-1" class="headerlink" title="constructor"></a>constructor</h2><p>建立蛇和食物的实例对象，绑定地图事件</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Game</span></span>() &#123;</span><br><span class="line">        <span class="built_in">this</span>.food = <span class="keyword">new</span> <span class="type">Food</span>();</span><br><span class="line">        <span class="built_in">this</span>.snake = <span class="keyword">new</span> <span class="type">Snake</span>();</span><br><span class="line">        <span class="built_in">this</span>.map = document.getElementById(<span class="string">&quot;map&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.timer = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="startGame"><a href="#startGame" class="headerlink" title="startGame()"></a>startGame()</h2><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//开始游戏</span></span><br><span class="line">Game.prototype.startGame = function () &#123;</span><br><span class="line">        <span class="keyword">this</span>.resetGame();</span><br><span class="line">        <span class="keyword">this</span>.bindKey();</span><br><span class="line">        <span class="keyword">this</span>.time();</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<h2 id="time"><a href="#time" class="headerlink" title="time()"></a>time()</h2><p>使用一个定时器让小蛇移动起来</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">Game.prototype.time = function (w) &#123;</span><br><span class="line">        <span class="keyword">var</span> i;</span><br><span class="line">        i = w || <span class="number">300</span>;</span><br><span class="line">        <span class="keyword">this</span>.timer = setInterval(() =&gt; &#123;</span><br><span class="line">            <span class="keyword">this</span>.snake.move(<span class="keyword">this</span>.map, <span class="keyword">this</span>.food);</span><br><span class="line">            <span class="keyword">this</span>.gameOver();</span><br><span class="line">        &#125;, i);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="pausee"><a href="#pausee" class="headerlink" title="pausee()"></a>pausee()</h2><p>暂停按钮，清除定时器</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//暂停游戏</span></span><br><span class="line">  <span class="module-access"><span class="module"><span class="identifier">Game</span>.</span></span>prototype.pausee = <span class="keyword">function</span> <span class="literal">()</span> &#123;</span><br><span class="line">      clear<span class="constructor">Interval(<span class="params">this</span>.<span class="params">timer</span>)</span>;</span><br><span class="line">      timer = null;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h2 id="bindKey"><a href="#bindKey" class="headerlink" title="bindKey()"></a>bindKey()</h2><p>绑定键盘的按键，并进行判断，控制小蛇不能直接向后方移动。</p>
<figure class="highlight gml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//绑定键盘的按键</span></span><br><span class="line">    Game.prototype.bindKey = <span class="keyword">function</span> () &#123;</span><br><span class="line">        <span class="keyword">var</span> that = this;</span><br><span class="line">        document.onkeydown = <span class="keyword">function</span> (e) &#123;</span><br><span class="line">            <span class="keyword">var</span> e = e || window.event;</span><br><span class="line">            <span class="keyword">switch</span> (e.keyCode) &#123;</span><br><span class="line">                <span class="comment">//上</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">38</span>:</span><br><span class="line">                    <span class="keyword">if</span> (</span><br><span class="line">                        that.snake.<span class="symbol">direction</span> === <span class="string">&quot;up&quot;</span> ||</span><br><span class="line">                        that.snake.<span class="symbol">direction</span> === <span class="string">&quot;down&quot;</span></span><br><span class="line">                    ) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    that.snake.<span class="symbol">direction</span> = <span class="string">&quot;up&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">//右</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">39</span>:</span><br><span class="line">                    <span class="keyword">if</span> (</span><br><span class="line">                        that.snake.<span class="symbol">direction</span> === <span class="string">&quot;right&quot;</span> ||</span><br><span class="line">                        that.snake.<span class="symbol">direction</span> === <span class="string">&quot;left&quot;</span></span><br><span class="line">                    ) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    that.snake.<span class="symbol">direction</span> = <span class="string">&quot;right&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">//下</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">40</span>:</span><br><span class="line">                    <span class="keyword">if</span> (</span><br><span class="line">                        that.snake.<span class="symbol">direction</span> === <span class="string">&quot;up&quot;</span> ||</span><br><span class="line">                        that.snake.<span class="symbol">direction</span> === <span class="string">&quot;down&quot;</span></span><br><span class="line">                    ) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    that.snake.<span class="symbol">direction</span> = <span class="string">&quot;down&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">//左</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">37</span>:</span><br><span class="line">                    <span class="keyword">if</span> (</span><br><span class="line">                        that.snake.<span class="symbol">direction</span> === <span class="string">&quot;right&quot;</span> ||</span><br><span class="line">                        that.snake.<span class="symbol">direction</span> === <span class="string">&quot;left&quot;</span></span><br><span class="line">                    ) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    that.snake.<span class="symbol">direction</span> = <span class="string">&quot;left&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<h2 id="lists"><a href="#lists" class="headerlink" title="lists()"></a>lists()</h2><p>建立一个数组，将游戏结束时的分数和数组中的数据进行比较，如果大于第 i 个，则从第 i 个数全部往后挪一位，再把此分数插入。</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">//排行榜</span><br><span class="line">    Game.prototype.lists=function()&#123;</span><br><span class="line">        //死亡出现结束页面</span><br><span class="line">        over.<span class="built_in">style</span>.<span class="built_in">display</span> = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">        <span class="built_in">background</span>.<span class="built_in">style</span>.<span class="built_in">display</span> = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">        map2.<span class="built_in">style</span>.<span class="built_in">display</span> = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">        clearInterval(spin);</span><br><span class="line">        //排行榜记录</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="built_in">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &lt;= this.snake.score) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="built_in">var</span> x=arr.<span class="built_in">length</span>-<span class="number">1</span>;x&gt;i;x--)&#123;</span><br><span class="line">                    arr[x]=arr[x-<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                arr[i] = this.snake.score;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">var</span> j=<span class="number">0</span>;j&lt;arr.<span class="built_in">length</span>;j++)&#123;</span><br><span class="line">            list[j].innerText=arr[j];</span><br><span class="line">            console.<span class="built_in">log</span>(list[j]);</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="gameOver"><a href="#gameOver" class="headerlink" title="gameOver()"></a>gameOver()</h2><p>判断游戏是否结束：</p>
<ul>
<li>蛇头超出地图边界</li>
<li>蛇头撞到自己的身体</li>
</ul>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//判断游戏结束</span></span><br><span class="line">    Game.prototype.gameOver = function () &#123;</span><br><span class="line">        <span class="comment">//游戏结束的判定条件</span></span><br><span class="line">        <span class="comment">//1.蛇头超出地图边界</span></span><br><span class="line">        <span class="keyword">var</span> head = <span class="keyword">this</span>.snake.body[<span class="number">0</span>];</span><br><span class="line">        console.log(<span class="keyword">this</span>.map.offsetHeight)</span><br><span class="line">        <span class="keyword">var</span> maxX = Math.floor(<span class="keyword">this</span>.map.clientWidth / <span class="keyword">this</span>.food.width);</span><br><span class="line">        <span class="keyword">var</span> maxY = Math.floor(<span class="keyword">this</span>.map.clientHeight / <span class="keyword">this</span>.food.height);</span><br><span class="line">        <span class="keyword">if</span> (head.x &lt; <span class="number">0</span> || head.y &lt; <span class="number">0</span> || head.x &gt;= maxX || head.y &gt;= maxY) &#123;</span><br><span class="line">            clearInterval(<span class="keyword">this</span>.timer);</span><br><span class="line">            <span class="keyword">this</span>.timer = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">this</span>.lists();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.蛇头撞到自己的身躯  遍历每一个身躯，看每一个身躯的坐标是否和蛇头重叠</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="keyword">this</span>.snake.body.length; i++) &#123;</span><br><span class="line">            <span class="keyword">var</span> item = <span class="keyword">this</span>.snake.body[i];</span><br><span class="line">            <span class="comment">//头撞身躯了</span></span><br><span class="line">            <span class="keyword">if</span> (item.x === head.x &amp;&amp; item.y === head.y) &#123;</span><br><span class="line">                clearInterval(<span class="keyword">this</span>.timer);</span><br><span class="line">                <span class="keyword">this</span>.timer = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">this</span>.lists();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<h2 id="resetGame"><a href="#resetGame" class="headerlink" title="resetGame()"></a>resetGame()</h2><p>清除定时器，重新创建蛇和食物对象</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//重置游戏</span></span><br><span class="line">    Game.prototype.resetGame = function () &#123;</span><br><span class="line">        clearInterval(<span class="keyword">this</span>.timer);</span><br><span class="line">        <span class="keyword">this</span>.timer = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.food = new Food();</span><br><span class="line">        <span class="keyword">this</span>.snake = new Snake();</span><br><span class="line">        <span class="keyword">this</span>.food.<span class="keyword">init</span>(<span class="keyword">this</span>.map);</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<h1 id="index"><a href="#index" class="headerlink" title="index"></a>index</h1><p>主程序部分，包含开始游戏页面点击和暂停图标旋转</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> map = <span class="built_in">document</span>.getElementById(<span class="string">&quot;map&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> map2 = <span class="built_in">document</span>.getElementById(<span class="string">&quot;map2&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> over = <span class="built_in">document</span>.getElementById(<span class="string">&quot;gameover&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> start = <span class="built_in">document</span>.getElementById(<span class="string">&quot;startGame&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> background = <span class="built_in">document</span>.getElementById(<span class="string">&quot;background&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> game = <span class="keyword">new</span> Game();</span><br><span class="line">    start.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      game.startGame();</span><br><span class="line">      auto();</span><br><span class="line">      over.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">      background.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">      map2.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">      </span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> pause = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.pause&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> sr = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.src&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> inp = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.inp&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">    pause.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (a == <span class="number">0</span>) &#123;</span><br><span class="line">        sr.src = <span class="string">&quot;images/pause.png&quot;</span>;</span><br><span class="line">        a = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(inp.value);</span><br><span class="line">        game.time(inp.value);</span><br><span class="line">        auto();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        sr.src = <span class="string">&quot;images/start.png&quot;</span>;</span><br><span class="line">        a = <span class="number">0</span>;</span><br><span class="line">        game.pausee();</span><br><span class="line">        <span class="built_in">console</span>.log(spin);</span><br><span class="line">        <span class="built_in">clearInterval</span>(spin);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> spin=<span class="literal">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">auto</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      spin=<span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        sr.style.transform=<span class="string">&quot;rotate(&quot;</span>+i+<span class="string">&quot;deg)&quot;</span></span><br><span class="line">        sr.style.transition=<span class="string">&quot;all 1s&quot;</span>;</span><br><span class="line">        i+=<span class="number">60</span>;</span><br><span class="line">      &#125;,<span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br></pre></td></tr></table></figure>

<p>为了方便使用和修改，所以对三个对象分别用自调用函数进行了封装。成品和源代码地址如下：</p>
<img src="/2021/09/10/js%E8%B4%AA%E5%90%83%E8%9B%87/tc.png" style="zoom:80%;">

<img src="/2021/09/10/js%E8%B4%AA%E5%90%83%E8%9B%87/start.png" style="zoom:80%;">

<div style="clear:both;"></div>

<p>源代码地址：<a href="https://github.com/yq6668/code">https://github.com/yq6668/code</a></p>
]]></content>
      <categories>
        <category>js小游戏</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>css</tag>
        <tag>JavaScrip</tag>
      </tags>
  </entry>
  <entry>
    <title>canvas贪吃蛇</title>
    <url>/2021/09/23/canvas%E8%B4%AA%E5%90%83%E8%9B%87/</url>
    <content><![CDATA[<img src="/2021/09/23/canvas%E8%B4%AA%E5%90%83%E8%9B%87/tc.png" style="zoom:67%;">

<span id="more"></span>

<h1 id="Food"><a href="#Food" class="headerlink" title="Food()"></a>Food()</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//食物的自调用函数</span></span><br><span class="line">(function (w) &#123;</span><br><span class="line">    <span class="comment">//食物的构造函数</span></span><br><span class="line">    function Food(x, y, width, height) &#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x || <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>.y = y || <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>.width = width || <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">this</span>.height = height || <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">this</span>.color = <span class="string">&quot;red&quot;</span>;</span><br><span class="line">        <span class="keyword">this</span>.q = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//食物的初始化方法</span></span><br><span class="line">    <span class="keyword">var</span> image = new Image();</span><br><span class="line">    image.src = <span class="string">&quot;images/bianbian.png&quot;</span>;</span><br><span class="line">    Food.prototype.<span class="keyword">init</span> = function (ctx, x) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.q = x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//指定食物的坐标</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.q == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> maxX = Math.floor(ctx.canvas.width / <span class="keyword">this</span>.width);</span><br><span class="line">            <span class="keyword">var</span> maxY = Math.floor(ctx.canvas.height / <span class="keyword">this</span>.height);</span><br><span class="line">            x = Random.getRandom(<span class="number">0</span>, maxX);</span><br><span class="line">            y = Random.getRandom(<span class="number">0</span>, maxY);</span><br><span class="line">            <span class="keyword">this</span>.x = x;</span><br><span class="line">            <span class="keyword">this</span>.y = y;</span><br><span class="line">            <span class="keyword">this</span>.q = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//创建页面元素</span></span><br><span class="line">        ctx.beginPath();</span><br><span class="line">        ctx.drawImage(image, <span class="keyword">this</span>.x * <span class="number">40</span>, <span class="keyword">this</span>.y * <span class="number">40</span>, <span class="keyword">this</span>.width, <span class="keyword">this</span>.height);</span><br><span class="line">        <span class="comment">// ctx.fillStyle = this.color;</span></span><br><span class="line">        <span class="comment">// ctx.fillRect(this.x*40, this.y*40, this.width, this.height);</span></span><br><span class="line">    &#125;;</span><br><span class="line">    w.Food = Food;</span><br><span class="line">&#125;)(window);</span><br></pre></td></tr></table></figure>

<h1 id="Snake"><a href="#Snake" class="headerlink" title="Snake()"></a>Snake()</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//蛇的自调用函数</span></span><br><span class="line">(function (w) &#123;</span><br><span class="line">    <span class="keyword">var</span> sco = document.querySelector(<span class="string">&quot;.sco&quot;</span>);</span><br><span class="line">    <span class="comment">//小蛇的构造函数</span></span><br><span class="line">    function Snake(width, height, direction) &#123;</span><br><span class="line">        <span class="keyword">this</span>.width = width || <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">this</span>.height = height || <span class="number">40</span>;</span><br><span class="line">        <span class="keyword">this</span>.direction = direction || <span class="string">&quot;right&quot;</span>;</span><br><span class="line">        <span class="comment">//游戏分数统计</span></span><br><span class="line">        <span class="keyword">this</span>.score = <span class="number">0</span>;</span><br><span class="line">        sco.innerText = <span class="keyword">this</span>.score;</span><br><span class="line">        <span class="comment">//小蛇身躯</span></span><br><span class="line">        <span class="keyword">this</span>.body = [</span><br><span class="line">            &#123; x: <span class="number">3</span>, y: <span class="number">2</span>, color: <span class="string">&quot;red&quot;</span> &#125;,</span><br><span class="line">            &#123; x: <span class="number">2</span>, y: <span class="number">2</span>, color: <span class="string">&quot;green&quot;</span> &#125;,</span><br><span class="line">            &#123; x: <span class="number">1</span>, y: <span class="number">2</span>, color: <span class="string">&quot;green&quot;</span> &#125;,</span><br><span class="line">            <span class="comment">// &#123; x: 3, y: 2, color: &quot;images/header.png&quot; &#125;,</span></span><br><span class="line">            <span class="comment">// &#123; x: 2, y: 2, color: &quot;images/body.png&quot; &#125;,</span></span><br><span class="line">            <span class="comment">// &#123; x: 1, y: 2, color: &quot;images/body.png&quot; &#125;,</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//小蛇的初始化方法</span></span><br><span class="line"></span><br><span class="line">    Snake.prototype.<span class="keyword">init</span> = function (ctx) &#123;</span><br><span class="line">        <span class="comment">//创建小蛇的每一个身躯</span></span><br><span class="line">        <span class="keyword">var</span> image = new Image();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.body.length; i++) &#123;</span><br><span class="line">            <span class="comment">//创建页面元素</span></span><br><span class="line">            <span class="comment">// image.src = this.body[i].color;</span></span><br><span class="line">            <span class="comment">// ctx.drawImage(image, this.body[i].x * 40, this.body[i].y * 40, this.width, this.height);</span></span><br><span class="line">            ctx.beginPath();</span><br><span class="line">            ctx.fillStyle = <span class="keyword">this</span>.body[i].color;</span><br><span class="line">            ctx.fillRect(<span class="keyword">this</span>.body[i].x * <span class="number">40</span>, <span class="keyword">this</span>.body[i].y * <span class="number">40</span>, <span class="keyword">this</span>.width, <span class="keyword">this</span>.height);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// image.src = this.body[0].color;</span></span><br><span class="line">        <span class="comment">// var that=this;</span></span><br><span class="line">        <span class="comment">// image.onload = function () &#123;</span></span><br><span class="line">        <span class="comment">//     console.log(that);</span></span><br><span class="line">        <span class="comment">//     for (var i = 0; i &lt; that.body.length; i++) &#123;</span></span><br><span class="line">        <span class="comment">//         if(i==0)&#123;</span></span><br><span class="line">        <span class="comment">//             console.log(i);</span></span><br><span class="line">        <span class="comment">//             ctx.drawImage(image, that.body[i].x * 40, that.body[i].y * 40, that.width, that.height);</span></span><br><span class="line">        <span class="comment">//         &#125;else&#123;</span></span><br><span class="line">        <span class="comment">//             image.src = that.body[1].color;</span></span><br><span class="line">        <span class="comment">//             console.log(image);</span></span><br><span class="line">        <span class="comment">//             ctx.drawImage(image, that.body[i].x * 40, that.body[i].y * 40, that.width, that.height);</span></span><br><span class="line">        <span class="comment">//         &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// ctx.beginPath();</span></span><br><span class="line">        <span class="comment">// ctx.fillStyle = this.body[i].color;</span></span><br><span class="line">        <span class="comment">// ctx.fillRect(this.body[i].x * 40, this.body[i].y * 40, this.width, this.height);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//小蛇移动的方法</span></span><br><span class="line">    Snake.prototype.move = function (ctx, food) &#123;</span><br><span class="line">        <span class="comment">//改变非蛇头部分坐标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">this</span>.body.length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">this</span>.body[i].x = <span class="keyword">this</span>.body[i - <span class="number">1</span>].x;</span><br><span class="line">            <span class="keyword">this</span>.body[i].y = <span class="keyword">this</span>.body[i - <span class="number">1</span>].y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//改变蛇头部分坐标</span></span><br><span class="line">        switch (<span class="keyword">this</span>.direction) &#123;</span><br><span class="line">            case <span class="string">&quot;right&quot;</span>:</span><br><span class="line">                <span class="keyword">this</span>.body[<span class="number">0</span>].x += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            case <span class="string">&quot;left&quot;</span>:</span><br><span class="line">                <span class="keyword">this</span>.body[<span class="number">0</span>].x -= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            case <span class="string">&quot;up&quot;</span>:</span><br><span class="line">                <span class="keyword">this</span>.body[<span class="number">0</span>].y -= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            case <span class="string">&quot;down&quot;</span>:</span><br><span class="line">                <span class="keyword">this</span>.body[<span class="number">0</span>].y += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            default:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//当蛇头坐标和食物坐标重叠的时候，就可以吃食物了</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.body[<span class="number">0</span>].x === food.x &amp;&amp; <span class="keyword">this</span>.body[<span class="number">0</span>].y === food.y) &#123;</span><br><span class="line">            <span class="comment">//让小蛇的身躯+1</span></span><br><span class="line">            <span class="keyword">this</span>.score += <span class="number">500</span>;</span><br><span class="line">            sco.innerText = <span class="keyword">this</span>.score;</span><br><span class="line">            <span class="keyword">var</span> last = <span class="keyword">this</span>.body[<span class="keyword">this</span>.body.length - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">var</span> item = &#123;</span><br><span class="line">                x: last.x,</span><br><span class="line">                y: last.y,</span><br><span class="line">                color: last.color,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">this</span>.body.push(item);</span><br><span class="line">            food.<span class="keyword">init</span>(ctx, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="keyword">this</span>.body.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.body[i].x === food.x &amp;&amp; <span class="keyword">this</span>.body[i].y === food.y) &#123;</span><br><span class="line">                food.<span class="keyword">init</span>(ctx, <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//每次移动就会删除之前的，重新生成</span></span><br><span class="line">        <span class="keyword">this</span>.<span class="keyword">init</span>(ctx);</span><br><span class="line">    &#125;;</span><br><span class="line">    w.Snake = Snake;</span><br><span class="line">&#125;)(window);</span><br></pre></td></tr></table></figure>

<h1 id="Game"><a href="#Game" class="headerlink" title="Game()"></a>Game()</h1><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">(function (w) &#123;</span><br><span class="line">    function Game() &#123;</span><br><span class="line">        <span class="keyword">this</span>.food = new Food();</span><br><span class="line">        <span class="keyword">this</span>.snake = new Snake();</span><br><span class="line">        <span class="keyword">this</span>.timer = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//开始游戏</span></span><br><span class="line">    Game.prototype.startGame = function (ctx) &#123;</span><br><span class="line">        <span class="keyword">this</span>.food.<span class="keyword">init</span>(ctx);</span><br><span class="line">        <span class="keyword">this</span>.bindKey();</span><br><span class="line">        <span class="keyword">this</span>.time(ctx);</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    Game.prototype.time = function (ctx,w) &#123;</span><br><span class="line">        <span class="keyword">var</span> i;</span><br><span class="line">        i = w||<span class="number">300</span>;</span><br><span class="line">        <span class="keyword">this</span>.timer = setInterval(() =&gt; &#123;</span><br><span class="line">            ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, ctx.canvas.width, ctx.canvas.height);</span><br><span class="line">            <span class="keyword">this</span>.food.<span class="keyword">init</span>(ctx);</span><br><span class="line">            <span class="keyword">this</span>.snake.move(ctx, <span class="keyword">this</span>.food);</span><br><span class="line">            <span class="keyword">this</span>.gameOver(ctx);</span><br><span class="line">        &#125;, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//暂停游戏</span></span><br><span class="line">    Game.prototype.pausee = function () &#123;</span><br><span class="line">        clearInterval(<span class="keyword">this</span>.timer);</span><br><span class="line">        timer = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//绑定键盘的按键</span></span><br><span class="line">    Game.prototype.bindKey = function () &#123;</span><br><span class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">        document.onkeydown = function (e) &#123;</span><br><span class="line">            <span class="keyword">var</span> e = e || window.event;</span><br><span class="line">            switch (e.keyCode) &#123;</span><br><span class="line">                <span class="comment">//上</span></span><br><span class="line">                case <span class="number">38</span>:</span><br><span class="line">                    <span class="keyword">if</span> (</span><br><span class="line">                        that.snake.direction === <span class="string">&quot;up&quot;</span> ||</span><br><span class="line">                        that.snake.direction === <span class="string">&quot;down&quot;</span></span><br><span class="line">                    ) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    that.snake.direction = <span class="string">&quot;up&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">//右</span></span><br><span class="line">                case <span class="number">39</span>:</span><br><span class="line">                    <span class="keyword">if</span> (</span><br><span class="line">                        that.snake.direction === <span class="string">&quot;right&quot;</span> ||</span><br><span class="line">                        that.snake.direction === <span class="string">&quot;left&quot;</span></span><br><span class="line">                    ) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    that.snake.direction = <span class="string">&quot;right&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">//下</span></span><br><span class="line">                case <span class="number">40</span>:</span><br><span class="line">                    <span class="keyword">if</span> (</span><br><span class="line">                        that.snake.direction === <span class="string">&quot;up&quot;</span> ||</span><br><span class="line">                        that.snake.direction === <span class="string">&quot;down&quot;</span></span><br><span class="line">                    ) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    that.snake.direction = <span class="string">&quot;down&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">//左</span></span><br><span class="line">                case <span class="number">37</span>:</span><br><span class="line">                    <span class="keyword">if</span> (</span><br><span class="line">                        that.snake.direction === <span class="string">&quot;right&quot;</span> ||</span><br><span class="line">                        that.snake.direction === <span class="string">&quot;left&quot;</span></span><br><span class="line">                    ) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    that.snake.direction = <span class="string">&quot;left&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                default:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="number">3000</span>, <span class="number">2000</span>, <span class="number">1000</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> list=document.querySelectorAll(<span class="string">&quot;.aa&quot;</span>);</span><br><span class="line">    <span class="comment">//排行榜</span></span><br><span class="line">    Game.prototype.lists=function()&#123;</span><br><span class="line">        <span class="comment">//排行榜记录</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &lt;= <span class="keyword">this</span>.snake.score) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> x=arr.length-<span class="number">1</span>;x&gt;i;x--)&#123;</span><br><span class="line">                    arr[x]=arr[x-<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                arr[i] = <span class="keyword">this</span>.snake.score;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;arr.length;j++)&#123;</span><br><span class="line">            list[j].innerText=arr[j];</span><br><span class="line">            console.log(list[j]);</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断游戏结束</span></span><br><span class="line">    Game.prototype.gameOver = function (ctx) &#123;</span><br><span class="line">        <span class="comment">//游戏结束的判定条件</span></span><br><span class="line">        <span class="comment">//1.蛇头超出地图边界</span></span><br><span class="line">        <span class="keyword">var</span> head = <span class="keyword">this</span>.snake.body[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> maxX = Math.floor(ctx.canvas.width / <span class="keyword">this</span>.food.width);</span><br><span class="line">        <span class="keyword">var</span> maxY = Math.floor(ctx.canvas.height / <span class="keyword">this</span>.food.height);</span><br><span class="line">        <span class="keyword">if</span> (head.x &lt; <span class="number">0</span> || head.y &lt; <span class="number">0</span> || head.x &gt;= maxX || head.y &gt;= maxY) &#123;</span><br><span class="line">            clearInterval(<span class="keyword">this</span>.timer);</span><br><span class="line">            <span class="keyword">this</span>.timer = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">this</span>.lists();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.蛇头撞到自己的身躯  遍历每一个身躯，看每一个身躯的坐标是否和蛇头重叠</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="keyword">this</span>.snake.body.length; i++) &#123;</span><br><span class="line">            <span class="keyword">var</span> item = <span class="keyword">this</span>.snake.body[i];</span><br><span class="line">            <span class="comment">//头撞身躯了</span></span><br><span class="line">            <span class="keyword">if</span> (item.x === head.x &amp;&amp; item.y === head.y) &#123;</span><br><span class="line">                clearInterval(<span class="keyword">this</span>.timer);</span><br><span class="line">                <span class="keyword">this</span>.timer = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">this</span>.lists();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//重置游戏</span></span><br><span class="line">    Game.prototype.resetGame = function () &#123;</span><br><span class="line">        clearInterval(<span class="keyword">this</span>.timer);</span><br><span class="line">        <span class="keyword">this</span>.timer = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.food = new Food();</span><br><span class="line">        <span class="keyword">this</span>.snake = new Snake();</span><br><span class="line">        <span class="keyword">this</span>.food.<span class="keyword">init</span>(ctx);</span><br><span class="line">        <span class="keyword">this</span>.bindKey();</span><br><span class="line">        <span class="keyword">this</span>.time(ctx);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    w.Game = Game;</span><br><span class="line">&#125;)(window);</span><br></pre></td></tr></table></figure>

<h1 id="other"><a href="#other" class="headerlink" title="other"></a>other</h1><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">var</span> canvas = <span class="built_in">document</span>.<span class="built_in">querySelector</span>(<span class="string">&#x27;canvas&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> game = <span class="keyword">new</span> Game();</span><br><span class="line">  game.startGame(ctx);</span><br><span class="line">  <span class="keyword">var</span> button = <span class="built_in">document</span>.<span class="built_in">querySelector</span>(<span class="string">&quot;.reset&quot;</span>);</span><br><span class="line">  button.onclick = function () &#123;</span><br><span class="line">    game.resetGame();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> pause = <span class="built_in">document</span>.<span class="built_in">querySelector</span>(<span class="string">&quot;.pause&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> sr = <span class="built_in">document</span>.<span class="built_in">querySelector</span>(<span class="string">&quot;.src&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> inp = <span class="built_in">document</span>.<span class="built_in">querySelector</span>(<span class="string">&quot;.inp&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">  pause.onclick = function () &#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">0</span>) &#123;</span><br><span class="line">      a = <span class="number">1</span>;</span><br><span class="line">      game.time(ctx, inp.value);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      a = <span class="number">0</span>;</span><br><span class="line">      game.pausee();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>



<p>源代码地址：<a href="https://github.com/yq6668/code">https://github.com/yq6668/code</a></p>
]]></content>
      <tags>
        <tag>JavaScrip</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
</search>
